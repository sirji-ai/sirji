{
  "name": "sirji",
  "displayName": "Sirji",
  "description": "Sirji is an AI Software Development Agent.",
  "version": "0.0.15",
  "publisher": "TrueSparrow",
  "icon": "out/assets/sirji.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/sirji-ai/sirji"
  },
  "bugs": {
    "url": "https://github.com/sirji-ai/sirji/issues"
  },
  "qna": "https://github.com/orgs/sirji-ai/discussions/categories/q-a",
  "license": "MIT",
  "engines": {
    "vscode": "^1.80.2"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Education"
  ],
  "keywords": [
    "ai",
    "sirji",
    "true sparrow",
    "openai",
    "snippets",
    "documentation",
    "javascript",
    "python",
    "typescript",
    "php",
    "go",
    "golang",
    "ruby",
    "c++",
    "c#",
    "java",
    "kotlin",
    "software development agent",
    "opensource devin"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sirji.chat",
        "title": "Sirji"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sirji-explorer",
          "title": "Sirji",
          "icon": "out/assets/sirji-icon.svg"
        }
      ]
    },
    "views": {
      "sirji-explorer": [
        {
          "id": "sirji-view",
          "name": ""
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "sirji-view",
        "contents": "Start a new session to run Sirji. \n[Start a new session](command:sirji.chat)"
      }
    ],
    "walkthrough": [
      {
        "id": "sample",
        "title": "Sirji",
        "description": "Sirji is an open-source AI software development agent. It is implemented as a VS Code extension.",
        "when": "true",
        "steps": [
          {
            "id": "step1",
            "title": "Getting Started",
            "description": "To start working with Sirji, you must start a new session. You can do that by:\nðŸ‘‰Clicking the Sirji icon in the Activity panel \nðŸ‘‰Or just type cmd+shift+P.\n[Start a session](command:sirji.chat)",
            "media": {
              "image": "out/assets/sirji-icon.svg",
              "altText": "Image 1"
            }
          },
          {
            "id": "step2",
            "title": "What is a recipe?",
            "description": "A recipe is a complex set of instructions on how the agents will interact with each other. You can use from certain set recipes or create your own.",
            "media": {
              "image": "out/assets/sirji-icon.svg",
              "altText": "Image 2"
            }
          },
          {
            "id": "step3",
            "title": "What is an agent?",
            "description": "The agents include base ones built by us such as the planner, coder, researcher, product manager, architect, reviewer, and executor. \nYou can create a custom agent either by modifying certain properties of a base agent such as the prompt and the LLM, or writing one from scratch such as a DevOps agent specializing in the AWS deployment workflow.",
            "media": {
              "image": "out/assets/sirji-icon.svg",
              "altText": "Image 1"
            }
          },
          {
            "id": "step4",
            "title": "Contribute",
            "description": "We welcome contributions to Sirji! If you're interested in helping, please look at our [Contributing Guidelines](https://github.com/sirji-ai/sirji/blob/main/CONTRIBUTING.md).",
            "media": {
              "image": "out/assets/sirji-icon.svg",
              "altText": "Image 1"
            }
          },
          {
            "id": "step5",
            "title": "Provide feedback",
            "description": "We value your feedback and suggestions. Please report them by following our [issue-reporting guidelines](https://github.com/sirji-ai/sirji/blob/main/ISSUES.md).",
            "media": {
              "image": "out/assets/sirji-icon.svg",
              "altText": "Image 1"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && cp -r src/views src/py_scripts src/assets src/defaults out/",
    "watch-ts": "tsc -watch -p ./",
    "watch-other": "nodemon --watch src --ext html,css,js,py --exec 'mkdir -p out/ && cp -r src/views src/py_scripts src/assets src/defaults out/'",
    "watch": "concurrently npm:watch-*",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "prepack": "cp ../../README.md README.md && cp ../../LICENSE LICENSE",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/babel__traverse": "^7.20.5",
    "@types/esprima": "^4.0.6",
    "@types/mime-types": "^2.1.4",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/uuid": "^9.0.8",
    "@types/vscode": "^1.80.2",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "@vscode/test-cli": "^0.0.6",
    "@vscode/test-electron": "^2.3.9",
    "concurrently": "^8.2.2",
    "eslint": "^8.56.0",
    "nodemon": "^3.1.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@babel/parser": "^7.24.5",
    "@babel/traverse": "^7.24.5",
    "mime-types": "^2.1.35",
    "uuid": "^9.0.1"
  }
}
