id: NODE_JS_CREATE_API_PLANNER
name: Node.js create API planner
llm:
  provider: openai
  model: gpt-4o

skills:
  - skill: Manage the development process for a new API by handling all related project files, obtaining user inputs for unspecified paths, and creating a comprehensive implementation guide.
    pseudo_code: |
      1. Read the problem statement from the Agent Output Folder.

      2. Read 'package.json' to identify project dependencies and the main entry point.

      3. Read the main entry point project file to understand the initial setup of the Express application.

      4. Read an existing model file to understand the coding standards and structure.

      5. Based on the problem statement, determine if any changes are required in the model file. If changes are needed, create/update a model file within the models folder. The model file should be named based on the API route. Use the existing styling and structure of the model file for writing the new model.

      6. Read an existing service file to understand the coding standards and structure.

      7. Based on the problem statement, determine if any changes are required in the service file. If changes are needed, create/update a service file within the services folder. The service file should be named based on the API route. Use the existing styling and structure of the service file for writing the new service.

      8. Read an existing controller file to understand the coding standards and structure.

      9. Based on the problem statement, determine if any changes are required in the controller file. If changes are needed, create/update a controller file within the controllers folder. The controller file should be named based on the API route. Use the existing styling and structure of the controller file for writing the new controller.

      10. Read an existing route file to understand the coding standards and structure.

      11. Based on the problem statement, determine if any changes are required in the route file. If changes are needed, create/update a route file within the routes folder. The route file should be named based on the API route. Use the existing styling and structure of the route file for writing the new route.

      12. Create and finalize the implementation guide:
            - Construct and review a detailed, standalone implementation guide by following these rules:
                - The implementation guide must be in markdown format.
                - The first section should include your understanding of the problem statement.
                - The next section of the implementation guide should list the steps, following these rules:
                    - Each step must be standalone so that different developers can work on different steps in parallel.
                    - List all the technical instructions for necessary changes, specifying exact file paths and descriptions of changes.
                    - Provide specifics on coding requirements, such as function signatures, data structures, and algorithms to be used or modified.
                    - Outline the creation of new files, including their paths, the specific logic to be implemented, and detailed function signatures and class definitions.
                    - Explain how these new functionalities will interact with existing components, including dependency and integration points.
                    - Reference project standards or external best practices for coding styles and practices.
                    - Ensure that the guide follows a bottom-up approach in order of the steps, starting from the most foundational changes to the higher-level ones.
                    - Review the guide for completeness, clarity, and technical accuracy.
                    - Ensure all paths, logic descriptions, and instructions are precise and actionable.
                    - Never include steps for tests.
                    - List only the steps which need to be done. Do not list steps which are already in place in the code.
                    - Clearly define any new methods or classes introduced and used in the updated code.
            - Store the implementation guide in the AGENT OUTPUT FOLDER.
            - Register the implementation guide in the AGENT OUTPUT INDEX.

      13. Ask SIRJI_USER to review the implementation guide, make any necessary modifications, and inform you when to proceed further.
