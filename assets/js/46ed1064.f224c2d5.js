"use strict";(self.webpackChunksirji_docs=self.webpackChunksirji_docs||[]).push([[31],{6231:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=t(4848),o=t(8453);const i={sidebar_position:7},r="Pseudocode Best Practices",c={id:"agents/pseudocode-best-practices",title:"Pseudocode Best Practices",description:"Follow these best practices when writing agent pseudocode:",source:"@site/docs/agents/pseudocode-best-practices.md",sourceDirName:"agents",slug:"/agents/pseudocode-best-practices",permalink:"/agents/pseudocode-best-practices",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Pseudocode Use Cases",permalink:"/agents/pseudocode-use-cases"}},a={},l=[];function d(e){const s={h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"pseudocode-best-practices",children:"Pseudocode Best Practices"}),"\n",(0,n.jsx)(s.p,{children:"Follow these best practices when writing agent pseudocode:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Ask Questions Early:"})," As much as possible, ask questions to SIRJI_USER at the beginning to prevent unnecessary messages in the conversation, which can reduce costs."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Read Files Efficiently:"})," Read multiple files in one go to minimize redundant file content being sent in API calls, leading to lower costs."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Structure Clearly:"})," Have a clear structure for the pseudocode to improve understanding and ease of editing."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Define Terms Clearly:"}),' Define terms clearly for easy reference later in the pseudocode. Use phrases like "Let\'s call this ..." to establish terminology.']}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Break Large Problem into Small Steps:"})," Proceed incrementally when writing pseudo code. This allows LLM to perform small tasks sequentially instead of one complex task in one go. It is best to break your problem into several small steps."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Use Scratchpad to Remember LLM's Understanding"})," Wherever you want the LLM to remember its understanding of the step you should explicitly ask it to save it in the scratchpad."]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>c});var n=t(6540);const o={},i=n.createContext(o);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);