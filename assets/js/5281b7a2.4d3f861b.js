"use strict";(self.webpackChunksirji_docs=self.webpackChunksirji_docs||[]).push([[443],{8798:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var t=r(4848),s=r(8453);const i={sidebar_position:5},o="Architecture",c={id:"architecture",title:"Architecture",description:"Sirji has a modular architecture aimed at easily writing your custom agents and recipes. Let's go step by step in understanding the architecture.",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/architecture",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Sirji Studio",permalink:"/custom-agents/sirji-studio"}},a={},h=[{value:"Custom Agent",id:"custom-agent",level:2},{value:"Recipe",id:"recipe",level:2},{value:"Orchestrator",id:"orchestrator",level:2},{value:"Executor",id:"executor",level:2},{value:"Researcher",id:"researcher",level:2},{value:"Agent Invocation",id:"agent-invocation",level:2},{value:"Agent Sessions",id:"agent-sessions",level:2},{value:"How it Works?",id:"how-it-works",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.p,{children:"Sirji has a modular architecture aimed at easily writing your custom agents and recipes. Let's go step by step in understanding the architecture."}),"\n",(0,t.jsx)(n.h2,{id:"custom-agent",children:"Custom Agent"}),"\n",(0,t.jsx)(n.p,{children:"An Agent in the Sirji framework is a modular AI component that performs a specific task based on a custom pseudo code."}),"\n",(0,t.jsxs)(n.p,{children:["To know more about agents, refer ",(0,t.jsx)(n.a,{href:"./category/custom-agents",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"recipe",children:"Recipe"}),"\n",(0,t.jsx)(n.p,{children:"A recipe is a list of prescribed tasks, with each task assigned to a specific agent."}),"\n",(0,t.jsxs)(n.p,{children:["To know more about recipe, refer ",(0,t.jsx)(n.a,{href:"./custom-agents/recipe",children:"here"})]}),"\n",(0,t.jsx)(n.h2,{id:"orchestrator",children:"Orchestrator"}),"\n",(0,t.jsx)(n.p,{children:"Orchestrator is the central component in the Sirji framework having the following responsibilities:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Recipe Selection"}),": Using the recipe index file, the list of recipes is shown to the user and asked for selecting one of them."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Agent Invocation"}),": Agents are invokes as per the order given in the recipe to perform the prescribed tasks."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"executor",children:"Executor"}),"\n",(0,t.jsx)(n.p,{children:"TODO"}),"\n",(0,t.jsx)(n.h2,{id:"researcher",children:"Researcher"}),"\n",(0,t.jsx)(n.p,{children:"TODO"}),"\n",(0,t.jsx)(n.h2,{id:"agent-invocation",children:"Agent Invocation"}),"\n",(0,t.jsx)(n.p,{children:"Agents are either invoked by orchestrator or by other agents."}),"\n",(0,t.jsx)(n.p,{children:"Invoking an agent involves these steps:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fresh conversation with the LLM is started. The agent pseudocode is sent as part of the system prompt to the LLM."}),"\n",(0,t.jsx)(n.li,{children:"The model and provider mentioned in the Agent YML is used for inference."}),"\n",(0,t.jsx)(n.li,{children:"LLM responds as per the agent pseudocode."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"agent-sessions",children:"Agent Sessions"}),"\n",(0,t.jsx)(n.p,{children:"TODO"}),"\n",(0,t.jsx)(n.h2,{id:"how-it-works",children:"How it Works?"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Orchestrator Invokes Recipe Selector:"})," The Recipe Selector agent reads ",(0,t.jsx)(n.code,{children:"recipes/index.json"})," to list available recipes for the user."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"User Selects a Recipe:"})," The Recipe Selector saves the chosen recipe in the Agent Output Folder."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Orchestrator Reads the Selected Recipe:"})," The Orchestrator retrieves the selected recipe from the Agent Output Folder."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Orchestrator Invokes Agents:"})," The Orchestrator invokes the agents in the order specified in the recipe to perform the tasks."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Agent Execution:"})," Each agent follows its pseudocode in a step-by-step manner."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Agent Invokes Sub-Agents:"})," The agent can optionally invoke other agents for performing a sub-task of it's own task."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,t.jsx)(n.p,{children:"TODO"})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);