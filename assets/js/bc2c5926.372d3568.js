"use strict";(self.webpackChunksirji_docs=self.webpackChunksirji_docs||[]).push([[305],{9848:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=s(4848),t=s(8453);const r={sidebar_position:4},o="Writing Agent Pseudocode",a={id:"custom-agents/writing-agent-pseudocode",title:"Writing Agent Pseudocode",description:"Pseudocode Scenarios",source:"@site/docs/custom-agents/writing-agent-pseudocode.md",sourceDirName:"custom-agents",slug:"/custom-agents/writing-agent-pseudocode",permalink:"/custom-agents/writing-agent-pseudocode",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Recipe",permalink:"/custom-agents/recipe"},next:{title:"Agent Creation Steps",permalink:"/custom-agents/agent-creation-steps"}},l={},d=[{value:"Pseudocode Scenarios",id:"pseudocode-scenarios",level:2},{value:"Interacting with the User",id:"interacting-with-the-user",level:3},{value:"Ask a Question",id:"ask-a-question",level:4},{value:"RAG Assistant",id:"rag-assistant",level:3},{value:"Create an Assistant",id:"create-an-assistant",level:4},{value:"Sync Project Files",id:"sync-project-files",level:4},{value:"Query the Assistant",id:"query-the-assistant",level:4},{value:"Project Folder Operations",id:"project-folder-operations",level:3},{value:"Read Files",id:"read-files",level:4},{value:"Create a File",id:"create-a-file",level:4},{value:"Update a File",id:"update-a-file",level:4},{value:"Agent Output Folder Operations",id:"agent-output-folder-operations",level:3},{value:"Read a File",id:"read-a-file",level:4},{value:"Create a File",id:"create-a-file-1",level:4},{value:"Invoking Other Agents",id:"invoking-other-agents",level:3},{value:"Fresh Session",id:"fresh-session",level:4},{value:"Existing Session",id:"existing-session",level:4},{value:"Terminal Operations",id:"terminal-operations",level:3},{value:"Run a Command",id:"run-a-command",level:4},{value:"Start a Server Process",id:"start-a-server-process",level:4},{value:"Miscellaneous",id:"miscellaneous",level:3},{value:"Write to Scratchpad",id:"write-to-scratchpad",level:4},{value:"Pseudocode Guidelines",id:"pseudocode-guidelines",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"writing-agent-pseudocode",children:"Writing Agent Pseudocode"}),"\n",(0,i.jsx)(n.h2,{id:"pseudocode-scenarios",children:"Pseudocode Scenarios"}),"\n",(0,i.jsx)(n.p,{children:"The agent pseudocode is a list of numbered steps that provides a blueprint for how the conversation with the LLM will proceed. Each step in the pseudocode is converted into a message according to the Sirji messaging protocol by the LLM. These messages are well understood by the Sirji framework, resulting in a limited number of allowed message templates. Thus each step of the pseudocode must adhere to one of the allowed scenarios."}),"\n",(0,i.jsx)(n.p,{children:"This section covers all the allowed scenarios for writing pseudocode steps, with example snippets."}),"\n",(0,i.jsx)(n.h3,{id:"interacting-with-the-user",children:"Interacting with the User"}),"\n",(0,i.jsx)(n.h4,{id:"ask-a-question",children:"Ask a Question"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Ask SIRJI_USER to provide {{Write the question here}}.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"rag-assistant",children:"RAG Assistant"}),"\n",(0,i.jsx)(n.h4,{id:"create-an-assistant",children:"Create an Assistant"}),"\n",(0,i.jsx)(n.p,{children:"Only one RAG assistant can be created per Sirji run and will be reused throughout."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Create an assistant with the following instructions:\n{{Write the instructions here}}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"sync-project-files",children:"Sync Project Files"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Sync project files with the assistant.\n"})}),"\n",(0,i.jsx)(n.h4,{id:"query-the-assistant",children:"Query the Assistant"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Infer from the assistant with the following query:\n{{Write the query here}}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"project-folder-operations",children:"Project Folder Operations"}),"\n",(0,i.jsx)(n.h4,{id:"read-files",children:"Read Files"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Using the project folder structure, determine the file paths for the following core codebase files and read them for the specified purposes:\n- OpenAPI file: Understand the input parameter and response specifications for the API.\n- Sequence diagram relevant to the Target API: Understand the logic to be implemented.\n"})}),"\n",(0,i.jsx)(n.h4,{id:"create-a-file",children:"Create a File"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Under the services folder in the project, create a service file for the API, following the conventions used in the inspiration service file.\n"})}),"\n",(0,i.jsx)(n.h4,{id:"update-a-file",children:"Update a File"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Change the version in setup.py to 3.0.0.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"agent-output-folder-operations",children:"Agent Output Folder Operations"}),"\n",(0,i.jsx)(n.h4,{id:"read-a-file",children:"Read a File"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Read the problem statement from the Agent Output Folder.\n"})}),"\n",(0,i.jsx)(n.h4,{id:"create-a-file-1",children:"Create a File"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Store the problem statement in the Agent Output Folder.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"invoking-other-agents",children:"Invoking Other Agents"}),"\n",(0,i.jsx)(n.p,{children:"An agent can be invoked in a fresh session or an existing session."}),"\n",(0,i.jsx)(n.h4,{id:"fresh-session",children:"Fresh Session"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Invoke agent NODE_JS_CREATE_API_PLANNER to {{write the purpose of invocation here}}.\n"})}),"\n",(0,i.jsx)(n.h4,{id:"existing-session",children:"Existing Session"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Invoke agent NODE_JS_CREATE_API_PLANNER in the existing session to {{write the purpose of invocation here}}.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"terminal-operations",children:"Terminal Operations"}),"\n",(0,i.jsx)(n.h4,{id:"run-a-command",children:"Run a Command"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Run `npm install`\n"})}),"\n",(0,i.jsx)(n.h4,{id:"start-a-server-process",children:"Start a Server Process"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Start the server using command: `npm start`\n"})}),"\n",(0,i.jsx)(n.h3,{id:"miscellaneous",children:"Miscellaneous"}),"\n",(0,i.jsx)(n.h4,{id:"write-to-scratchpad",children:"Write to Scratchpad"}),"\n",(0,i.jsx)(n.p,{children:"The scratchpad is a personal note-taking space for the agent."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Understand the code conventions followed in the existing code which you have read and store your understanding in the scratchpad.\n"})}),"\n",(0,i.jsx)(n.h2,{id:"pseudocode-guidelines",children:"Pseudocode Guidelines"}),"\n",(0,i.jsx)(n.p,{children:"Follow these guidelines when writing agent pseudocode:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure Clearly:"})," Have a clear structure for the pseudocode to improve understanding and ease of editing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ask Questions Early:"})," As much as possible, ask questions to SIRJI_USER at the beginning to prevent unnecessary messages in the conversation, which can reduce costs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read Files Efficiently:"})," Read multiple files in one go to minimize redundant file content being sent in API calls, leading to lower costs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Define Terms Clearly:"}),' Define terms clearly for easy reference later in the pseudocode. Use phrases like "Let\'s call this ..." to establish terminology.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Break Large Problem into Small Steps:"})," Proceed incrementally when writing pseudo code. This allows LLM to perform small tasks sequentially instead of one complex task in one go. It is best to break your problem into several small steps."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ensure Scenario Alignment:"})," Ensure that each point in the agent pseudocode corresponds to one and only one of the pseudocode scenarios mentioned above."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Scratchpad to Remember LLM's Understanding"})," Wherever you want the LLM to remember its understanding of the step you should explicitly ask it to save it in the scratchpad."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);