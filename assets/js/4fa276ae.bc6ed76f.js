"use strict";(self.webpackChunksirji_docs=self.webpackChunksirji_docs||[]).push([[341],{6207:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=n(4848),i=n(8453);const r={sidebar_position:6},o="Pseudocode Use Cases",a={id:"agents/pseudocode-use-cases",title:"Pseudocode Use Cases",description:"Let's go over different use cases encountered while writing pseudocode, providing example pseudocode snippets.",source:"@site/docs/agents/pseudocode-use-cases.md",sourceDirName:"agents",slug:"/agents/pseudocode-use-cases",permalink:"/agents/pseudocode-use-cases",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Recipe JSON",permalink:"/agents/recipe-json"},next:{title:"Pseudocode Best Practices",permalink:"/agents/pseudocode-best-practices"}},d={},c=[{value:"Use Case 1: Ask SIRJI_USER a Question",id:"use-case-1-ask-sirji_user-a-question",level:3},{value:"Use Case 2: Create Project File",id:"use-case-2-create-project-file",level:3},{value:"Use Case 3: Read Project Files",id:"use-case-3-read-project-files",level:3},{value:"Use Case 4: Make Edits to File",id:"use-case-4-make-edits-to-file",level:3},{value:"Use Case 5: Writing File to Agent Output Folder",id:"use-case-5-writing-file-to-agent-output-folder",level:3},{value:"Use Case 6: Read from Agent Output Folder",id:"use-case-6-read-from-agent-output-folder",level:3},{value:"Use Case 7: Write to Scratchpad",id:"use-case-7-write-to-scratchpad",level:3},{value:"Use Case 8: Invoke Other Agents",id:"use-case-8-invoke-other-agents",level:3},{value:"Use Case 9: Run Commands",id:"use-case-9-run-commands",level:3},{value:"Use Case 10: Run Server",id:"use-case-10-run-server",level:3},{value:"Best Practices",id:"best-practices",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"pseudocode-use-cases",children:"Pseudocode Use Cases"}),"\n",(0,t.jsx)(s.p,{children:"Let's go over different use cases encountered while writing pseudocode, providing example pseudocode snippets."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://github.com/sirji-ai/sirji/blob/main/sirji/vscode-extension/src/defaults/agents/NODE_JS_CREATE_API_PLANNER.yml",children:"Here"})," is an example of an agent pseudocode."]}),"\n",(0,t.jsx)(s.h3,{id:"use-case-1-ask-sirji_user-a-question",children:"Use Case 1: Ask SIRJI_USER a Question"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Ask SIRJI_USER to provide the route of the new API and the file path of the sequence diagram.\n"})}),"\n",(0,t.jsx)(s.h3,{id:"use-case-2-create-project-file",children:"Use Case 2: Create Project File"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Under the services folder in the project, create a service file for the API, following the conventions used in the inspiration service file.\n"})}),"\n",(0,t.jsx)(s.h3,{id:"use-case-3-read-project-files",children:"Use Case 3: Read Project Files"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Using the project folder structure, determine the file paths for the following core codebase files and read them for the specified purposes:\n    - OpenAPI file: Understand the input parameter and response specifications for the API.\n    - Sequence diagram relevant to the Target API: Understand the logic to be implemented.\n"})}),"\n",(0,t.jsx)(s.h3,{id:"use-case-4-make-edits-to-file",children:"Use Case 4: Make Edits to File"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Make the necessary changes to the storage file.\n"})}),"\n",(0,t.jsx)(s.h3,{id:"use-case-5-writing-file-to-agent-output-folder",children:"Use Case 5: Writing File to Agent Output Folder"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Store the problem statement (mentioning your understanding) in the Agent Output Folder.\n"})}),"\n",(0,t.jsx)(s.h3,{id:"use-case-6-read-from-agent-output-folder",children:"Use Case 6: Read from Agent Output Folder"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Read the problem statement from the Agent Output Folder.\n"})}),"\n",(0,t.jsx)(s.h3,{id:"use-case-7-write-to-scratchpad",children:"Use Case 7: Write to Scratchpad"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Understand the code conventions followed in the existing code which you have read and store your understanding in the scratchpad.\n"})}),"\n",(0,t.jsx)(s.h3,{id:"use-case-8-invoke-other-agents",children:"Use Case 8: Invoke Other Agents"}),"\n",(0,t.jsx)(s.p,{children:"Example pseudocode snippet:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Invoke agent NODE_JS_CREATE_API_PLANNER to create a comprehensive implementation guide for the new API to be implemented.\n"})}),"\n",(0,t.jsx)(s.p,{children:"TODO: add examples for INVOKE_AGENT_EXISTING_SESSION"}),"\n",(0,t.jsx)(s.h3,{id:"use-case-9-run-commands",children:"Use Case 9: Run Commands"}),"\n",(0,t.jsx)(s.p,{children:"TODO: add examples for EXECUTE_COMMAND"}),"\n",(0,t.jsx)(s.h3,{id:"use-case-10-run-server",children:"Use Case 10: Run Server"}),"\n",(0,t.jsx)(s.p,{children:"TODO: add examples for RUN_SERVER"}),"\n",(0,t.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(s.p,{children:"Follow these best practices when writing agent pseudocode:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ask Questions Early:"})," As much as possible, ask questions to SIRJI_USER at the beginning to prevent unnecessary messages in the conversation, which can reduce costs."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Read Files Efficiently:"})," Read multiple files in one go to minimize redundant file content being sent in API calls, leading to lower costs."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Structure Clearly:"})," Have a clear structure for the pseudocode to improve understanding and ease of editing."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Define Terms Clearly:"}),' Define terms clearly for easy reference later in the pseudocode. Use phrases like "Let\'s call this ..." to establish terminology.']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Break Large Problem into Small Steps:"})," Proceed incrementally when writing pseudo code. This allows LLM to perform small tasks sequentially instead of one complex task in one go. It is best to break your problem into several small steps."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Use Scratchpad to Remember LLM's Understanding"})," Wherever you want the LLM to remember its understanding of the step you should explicitly ask it to save it in the scratchpad."]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);