"use strict";(self.webpackChunksirji_docs=self.webpackChunksirji_docs||[]).push([[443],{8798:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=n(4848),r=n(8453);const i={sidebar_position:5},c="Architecture",o={id:"architecture",title:"Architecture",description:"Sirji has a modular architecture for easily creating custom agents and recipes. Let's discuss its components, one by one.",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/architecture",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Sirji Studio",permalink:"/custom-agents/sirji-studio"},next:{title:"Messaging Protocol",permalink:"/messaging-protocol"}},a={},l=[{value:"Custom Agent",id:"custom-agent",level:2},{value:"Recipe",id:"recipe",level:2},{value:"Orchestrator",id:"orchestrator",level:2},{value:"Executor",id:"executor",level:2},{value:"Researcher",id:"researcher",level:2},{value:"Agent Sessions",id:"agent-sessions",level:2},{value:"Messaging Protocol",id:"messaging-protocol",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(s.p,{children:"Sirji has a modular architecture for easily creating custom agents and recipes. Let's discuss its components, one by one."}),"\n",(0,t.jsx)(s.h2,{id:"custom-agent",children:"Custom Agent"}),"\n",(0,t.jsx)(s.p,{children:"An Agent in the Sirji framework is a modular AI component that performs specific tasks based on custom pseudocode."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"./category/custom-agents",children:"Learn more"})}),"\n",(0,t.jsx)(s.h2,{id:"recipe",children:"Recipe"}),"\n",(0,t.jsx)(s.p,{children:"A recipe is a list of tasks, each assigned to a specific agent."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"./custom-agents/recipe",children:"Learn more"})}),"\n",(0,t.jsx)(s.h2,{id:"orchestrator",children:"Orchestrator"}),"\n",(0,t.jsx)(s.p,{children:"The Orchestrator is the central component in the Sirji framework responsible for:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Recipe Selection"}),": Displaying the list of recipes from the recipe index file for user selection."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Agent Invocation"}),": Invoking agents in the order specified by the recipe to perform tasks."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"executor",children:"Executor"}),"\n",(0,t.jsx)(s.p,{children:"The Executor is a non-AI agent with the following capabilities:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"File system CRUD operations"}),"\n",(0,t.jsx)(s.li,{children:"Execute commands"}),"\n",(0,t.jsx)(s.li,{children:"Run code"}),"\n",(0,t.jsx)(s.li,{children:"Install packages"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"All agents can access these capabilities via the Executor."}),"\n",(0,t.jsx)(s.h2,{id:"researcher",children:"Researcher"}),"\n",(0,t.jsx)(s.p,{children:"The Researcher is an agent based on Retrieval-Augmented Generation (RAG) using the OpenAI Assistants API. It can sync your entire project folder with the OpenAI assistant and answer queries based on the synced files. The project files are uploaded to a vector store, which updates automatically with any changes made by the Sirji framework."}),"\n",(0,t.jsx)(s.h2,{id:"agent-sessions",children:"Agent Sessions"}),"\n",(0,t.jsx)(s.p,{children:"Agents can start a new session or continue an existing one. New sessions begin with a fresh system prompt without retaining previous context."}),"\n",(0,t.jsx)(s.h2,{id:"messaging-protocol",children:"Messaging Protocol"}),"\n",(0,t.jsxs)(s.p,{children:["Sirji implements a custom messaging protocol defining how LLM-based agents instruct the Executor or Researcher to perform actions. ",(0,t.jsx)(s.a,{href:"./messaging-protocol",children:"Read more"})]}),"\n",(0,t.jsx)(s.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Orchestrator Invokes Recipe Selector:"})," The Recipe Selector agent reads ",(0,t.jsx)(s.code,{children:"recipes/index.json"})," to list available recipes."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"User Selects a Recipe:"})," The Recipe Selector saves the chosen recipe in the Agent Output Folder."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Orchestrator Reads the Selected Recipe:"})," The Orchestrator retrieves the selected recipe from the Agent Output Folder."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Orchestrator Invokes Agents:"})," The Orchestrator invokes agents in the order specified in the recipe to perform tasks."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Agent Execution:"})," Each agent follows its pseudocode step-by-step."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Agent Invokes Sub-Agents:"})," Agents can optionally invoke other agents for sub-tasks."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"Sirji Architecture",src:n(2334).A+"",width:"1008",height:"1538"})})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},2334:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/sirji-architecture-70eccc6b986bdad0b12c3fb294905050.png"},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var t=n(6540);const r={},i=t.createContext(r);function c(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);